{
	"info": {
		"_postman_id": "76369832-79ee-48fd-ad51-e801f7cfec02",
		"name": "Generated Collection 036",
		"description": "Out-of-the-box, the framework opens REST API that conforms the JSON:API specification and enables CRUD operations support for the application ORM entities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "30291108-76369832-79ee-48fd-ad51-e801f7cfec02"
	},
	"item": [
		{
			"name": "addresstypes",
			"item": [
				{
					"name": "/addresstypes",
					"id": "5ef28eef-d085-4f34-a66c-d488b9d27335",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/addresstypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresstypes"
							]
						},
						"description": "Get communication options for a resource"
					},
					"response": [
						{
							"id": "b1b40cb6-bea6-4d4f-92ff-896fdd7f4da1",
							"name": "Returned when successful",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "8b128c97-7806-42eb-bcb5-b324817f9e8f",
							"name": "Returned when no permissions to get the entities",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						},
						{
							"id": "15c57aef-ce1b-478b-9b7b-d8b9ca5b4720",
							"name": "Returned when an unexpected error occurs",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "/addresstypes",
					"id": "8082b331-7e0d-45ff-991c-283d065615e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/addresstypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresstypes"
							]
						},
						"description": "Retrieve a collection of address type records"
					},
					"response": [
						{
							"id": "56c09cec-5b0c-4695-beab-dd160c263e6a",
							"name": "Returned when successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"type\": \"addresstypes\",\n      \"id\": \"billing\",\n      \"attributes\": {\n        \"label\": \"Billing\"\n      }\n    },\n    {\n      \"type\": \"addresstypes\",\n      \"id\": \"billing\",\n      \"attributes\": {\n        \"label\": \"Billing\"\n      }\n    }\n  ]\n}"
						},
						{
							"id": "e375dd8a-7a17-4398-b051-494d3795902b",
							"name": "Returned when no permissions to get the entities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						},
						{
							"id": "f87816c4-4f35-4fcc-a3a6-8a5aa9b4915c",
							"name": "Returned when an unexpected error occurs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "/addresstypes/:id",
					"id": "e3f8ad30-b142-46ae-832b-ca1717ab7798",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresstypes",
								":id"
							],
							"query": [
								{
									"description": "A list of meta properties to be returned. Comma-separated names",
									"key": "meta",
									"value": "pariatur aute"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "billing"
								}
							]
						},
						"description": "Get communication options for a resource"
					},
					"response": [
						{
							"id": "205707b8-aa52-4adc-9dd0-329496b0196e",
							"name": "Get communication options for a resource",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes",
										":id"
									],
									"query": [
										{
											"description": "A list of meta properties to be returned. Comma-separated names",
											"key": "meta",
											"value": "pariatur aute"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "/addresstypes/:id",
					"id": "6929a7d7-35a7-4800-91a9-53c2a95b27ae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addresstypes",
								":id"
							],
							"query": [
								{
									"description": "A list of meta properties to be returned. Comma-separated names",
									"key": "meta",
									"value": "pariatur aute"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "billing"
								}
							]
						},
						"description": "Retrieve a specific address type record"
					},
					"response": [
						{
							"id": "92d7ade6-b01e-48a0-bf28-7c5091ee5e80",
							"name": "Returned when successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes",
										":id"
									],
									"query": [
										{
											"description": "A list of meta properties to be returned. Comma-separated names",
											"key": "meta",
											"value": "pariatur aute"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"type\": \"addresstypes\",\n    \"id\": \"billing\",\n    \"attributes\": {\n      \"label\": \"Billing\"\n    }\n  }\n}"
						},
						{
							"id": "5729c166-533f-4258-8502-6fd386ed9bfb",
							"name": "Returned when no permissions to get the entity",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes",
										":id"
									],
									"query": [
										{
											"description": "A list of meta properties to be returned. Comma-separated names",
											"key": "meta",
											"value": "pariatur aute"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						},
						{
							"id": "87711985-10c6-4f7b-bda7-a2fd4adf46e5",
							"name": "Returned when the entity is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes",
										":id"
									],
									"query": [
										{
											"description": "A list of meta properties to be returned. Comma-separated names",
											"key": "meta",
											"value": "pariatur aute"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						},
						{
							"id": "e369682c-1a7c-4ce2-8c07-6cdcb9849071",
							"name": "Returned when an unexpected error occurs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/addresstypes/:id?meta=pariatur aute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addresstypes",
										":id"
									],
									"query": [
										{
											"description": "A list of meta properties to be returned. Comma-separated names",
											"key": "meta",
											"value": "pariatur aute"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.api+json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"status\": \"id\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    },\n    {\n      \"status\": \"dolor ut ul\",\n      \"title\": \"not found http exception\",\n      \"detail\": \"An entity with the requested identifier does not exist.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "9008d536-d705-461e-a218-c0d3289c2eac",
			"description": "Represent address type (e.g., shipping address, billing address, default shipping address, default billing address)"
		},
		{
			"name": "countries",
			"item": [],
			"id": "ecba6d8a-5626-4fc0-8b5f-d4342f318793",
			"description": "A country represents an element of an address record"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessTokenUrl",
				"value": "/oauth2-token",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "df7f3903-6208-4240-8686-227ae4c62ad0",
			"key": "baseUrl",
			"value": "https://otarakanov-universal-master.rcbuild8.dev.oroinc.com/api"
		}
	]
}
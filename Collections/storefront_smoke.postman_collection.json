{
	"info": {
		"_postman_id": "e557515c-4633-4467-a502-0d35ef739b73",
		"name": "CI Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30221153",
		"_collection_link": "https://oro-api-testing.postman.co/workspace/Oro-Storefront-API-testing~3031c469-5651-4ce1-afa0-b9c56f2129e7/collection/30221153-e557515c-4633-4467-a502-0d35ef739b73?action=share&source=collection_link&creator=30221153"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get OAuth2 access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"Authorization\", \"Bearer \" + pm.response.json().access_token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Token type is Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Bearer token length is ok\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.have.length(720);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"grant_type\": \"password\",\r\n    \"client_id\":\"{{client_id}}\",\r\n    \"client_secret\": \"{{client_secret}}\",\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
						},
						"url": "{{app_url}}/oauth2-token"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.request.headers.add({key: \"Content-Type\", value: \"application/json\"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Main",
			"item": [
				{
					"name": "Countries",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{api_url}}/countries"
					},
					"response": []
				},
				{
					"name": "Countries/{id}",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{api_url}}/countries/AD"
					},
					"response": []
				},
				{
					"name": "Countries/{id} Err",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{api_url}}/countries/ADr"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.request.headers.add({key: \"Accept\", value: \"application/vnd.api+json\"});",
							"pm.request.headers.add({key: \"X-Include\", value: \"totalCount\"});",
							"pm.request.headers.add({key: \"Authorization\", value: pm.collectionVariables.get(\"Authorization\")});",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    try {",
							"        pm.response.to.have.status(200);",
							"    } catch (err) {         ",
							"        if (\"fail\" == pm.environment.get(\"debug_mode\")){",
							"            pm.oroLogFail(pm, err);",
							"        }",
							"        throw new Error(err.message);",
							"    }",
							"});",
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"Object.prototype.oroLogFail = (pm, err) => console.log(\"Request headers:\",pm.request.headers,\"Response headers\",pm.response.headers,\"Assertion info:\",err);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (\"full\" == pm.environment.get(\"debug_mode\")){",
					"    pm.oroLogFail(pm, null);",
					"}",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_url",
			"value": "{{app_url}}/api",
			"type": "string"
		},
		{
			"key": "Authorization",
			"value": ""
		}
	]
}
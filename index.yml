openapi: 3.0.0
info:
  version: 1.0.0
  title: ORO Storefront Sample API
  description: Out-of-the-box, the framework opens REST API that conforms the JSON:API specification and enables CRUD operations support for the application ORM entities.
servers:
- url: https://otarakanov-universal-master.rcbuild8.dev.oroinc.com/api
  description: Universal-master
- url: https://otarakanov-universal1.rcbuild8.dev.oroinc.com/api
  description: Universal-1
paths:
  /api/addresstypes/{id}:
    parameters:
      - name: id
        description: The unique identifier of a resource
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/id'
    get:
      summary: GET a addresstypes
      responses:
        '200':
          description: Retrieve a specific address type record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addresstype'
        '404':
          description: No addresstypes found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    id:
      description: The unique identifier of a resource
      type: string
    addresstype:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/id'
        label:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:    
    OAuth2:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the ClientCredentials grant flow.
      flows:
        clientCredentials:   # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          tokenUrl: /oauth2-token
          scopes: {}
        authorizationCode:
          authorizationUrl: /oauth2-token/authorize
          tokenUrl: /oauth2-token
          scopes: {}
        password:   
          tokenUrl: /oauth2-token
          scopes: {}
security:
  - OAuth2: []
